
# name=c-cipa-0cfa-compute-dlog

.include "ZV.dom"   
.include "ZI.dom"
.include "ZC.dom"
.include "ZF.dom"


.bddvarorder ZV0xZV1_ZV2_ZC0xZC1xZI0xZF0

# v1 = v2
copy(v1:ZV0,v2:ZV1) input printtuples

# *v1 = v2
store(v1:ZV0,v2:ZV1) input

# v2 = *v1
load(v1:ZV0,v2:ZV1) input

# v1 = &v2
pt(v1:ZV0,v2:ZV1) input 

pass(i:ZI0,f:ZF0,v1:ZV0,v2:ZV1) input

ret(i:ZI0,f:ZF0,v1:ZV0,v2:ZV1) input

ie(c1:ZC0,i:ZI0,c2:ZC1,f:ZF0) input

npt0(v1:ZV0,v2:ZV1) input

copy0(v1:ZV0,v2:ZV1) printtuples

pt0(v1:ZV0,v2:ZV1) output

ncopy0(v1:ZV0, v2:ZV1) output printtuples

meet(v1:ZV0, v2:ZV1, v3:ZV2) output printtuples


# Rules 

copy0(x,z) :- copy0(x,_), x = z.

copy0(x,y) :- copy0(y,x).

copy0(x,y) :- copy(x,y).

copy0(x,z) :- copy0(x,y), copy0(y,z).

copy0(y, z) :- pt0(x, z), load(x, y).

copy0(z, y) :- pt0(x, z), store(x, y).

pt0(x,y) :- pt(x,y).

pt0(x, y) :- copy0(x, z), pt0(z, y).
copy(x,y) :- ie(_,i,_,f), pass(i,f,x,y).
copy(x,y) :- ie(_,i,_,f), ret(i,f,x,y).

meet(x,z,y) :- copy0(l1,x), copy(z,l1), copy0(y,l2), copy(z,l2), x!=l2, x!=y, x!=z, l1!=l2, l1!=z, l1!=y, z!=y, !copy(x,z), !copy(y,z).
ncopy0(l1,z) :- npt0(x,l), meet(x,z,y), copy0(x,l1), copy(z,l1), pt(y,l).
