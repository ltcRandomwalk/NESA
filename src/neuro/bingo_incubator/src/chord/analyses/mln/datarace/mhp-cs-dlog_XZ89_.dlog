# name=mhp-cs-dlog_XZ89_
.include "AS.dom"
.include "C.dom"
.include "I.dom"
.include "M.dom"
.include "P.dom"
.include "V.dom"
.include "Z.dom"
.bddvarorder AS0xAS1xAS2xAS3xAS4_I0xM0xM1xP0xP1xP2_C0xC1xC2


#Input relations
PP(p:P0,q:P1) input
MPhead(m:M0,p:P0) input
MPtail(m:M0,p:P0) input
PI(p:P0,i:I0) input
CICM(c1:C0,i:I0,c2:C1,m:M0) input
threadACM(t:AS0,c:C0,m:M0) input
threadStartI(i:I0) input
threadCICM(c:C0,i:I0,c:C1,m:M0) input

#Output relations
mhp_cs(c:C0,p:P0,t1:AS0,t2:AS1) output
SummEdge_cs(c:C0,p:P0,this:AS0,sThat:AS1,tThat:AS2) output
threadAC(t:AS0,c:C0) output
threadACH(t:AS0,c:C0,h:P0) output
threadPM_cs(caller:C0,p1:P0,callee:C1) output
threadPH_cs(caller:C0,p1:P0,callee:C1,p2:P1) output
simplePM_cs(caller:C0,p1:P0,callee:C1,m2:M0) output
simplePH_cs(caller:C0,p1:P0,callee:C1,p2:P1) output
simplePT_cs(caller:C0,p1:P0,callee:C1,p2:P1) output
PathEdge_cs(c:C0,p:P0,this:AS0,sThat:AS1,tThat:AS2) output

#Instrumented relations
PathEdge_cs_XZ89_12_33(c:C0,r:P0,t:AS0,t1:AS1,t2:AS2,p:P1,d:C1,v_XZ89_0:AS3) output
PathEdge_cs_XZ89_13_33(d:C0,h:P0,x:AS0,y:AS1,z:AS2,c:C1,p:P1,v_XZ89_0:AS3,v_XZ89_1:AS4) output
SummEdge_cs_XZ89_10_33(c:C0,p:P0,t:AS0,t1:AS1,t2:AS2,d:C1,q:P1) output
PathEdge_cs_XZ89_11_33(c:C0,r:P0,t:AS0,t1:AS1,t3:AS2,p:P1,t2:AS3) output
mhp_cs_XZ89_16_33(c:C0,p:P0,t1:AS0,t2:AS1,v_XZ89_0:AS2) output
PathEdge_cs_XZ89_14_33(d:C0,h:P0,x:AS0,y:AS1,z:AS2,c:C1,p:P1,v_XZ89_0:AS3,v_XZ89_1:AS4) output
PathEdge_cs_XZ89_15_33(e:C0,h1:P0,x:AS0,y:AS1,z:AS2,c:C1,p:P1,d:C2,v_XZ89_0:AS3,v_XZ89_1:AS4) output
simplePM_cs_XZ89_0_33(c:C0,p:P0,d:C1,m:M0,i:I0) output
simplePT_cs_XZ89_2_33(c:C0,p:P0,d:C1,t:P1,m:M0) output
simplePH_cs_XZ89_1_33(c:C0,p:P0,d:C1,h:P1,m:M0) output
threadPH_cs_XZ89_4_33(c:C0,p:P0,d:C1,h:P1,i:I0,m:M0) output
threadPM_cs_XZ89_3_33(c:C0,p:P0,d:C1,i:I0,v_XZ89_0:M0) output
threadACH_XZ89_6_33(t:AS0,c:C0,h:P0,m:M0) output
threadAC_XZ89_5_33(t:AS0,c:C0,m:M0) output
PathEdge_cs_XZ89_9_33(d:C0,q:P0,t:AS0,t1:AS1,t2:AS2,c:C1,p:P1,v_XZ89_0:AS3) output
PathEdge_cs_XZ89_8_33(c:C0,q:P0,t:AS0,t1:AS1,t2:AS2,p:P1) output

#Original rules
simplePM_cs(c,p,d,m) :- CICM(c,i,d,m), PI(p,i), !threadStartI(i).
simplePH_cs(c,p,d,h) :- simplePM_cs(c,p,d,m), MPhead(m,h).
simplePT_cs(c,p,d,t) :- simplePM_cs(c,p,d,m), MPtail(m,t).
threadPM_cs(c,p,d) :- threadCICM(c,i,d,_), PI(p,i).
threadPH_cs(c,p,d,h) :- threadCICM(c,i,d,m), PI(p,i), MPhead(m,h).
threadAC(t,c) :- threadACM(t,c,m), m!=0.
threadACH(t,c,h) :- threadACM(t,c,m), m!=0, MPhead(m,h).
PathEdge_cs(0,0,1,0,0).
PathEdge_cs(c,q,t,t1,t2) :- PathEdge_cs(c,p,t,t1,t2), PP(p,q).
PathEdge_cs(d,q,t,t1,t2) :- simplePH_cs(c,p,d,q), PathEdge_cs(c,p,t,_,t2), t1=t2.
SummEdge_cs(c,p,t,t1,t2) :- simplePT_cs(c,p,d,q), PathEdge_cs(d,q,t,t1,t2).
PathEdge_cs(c,r,t,t1,t3) :- SummEdge_cs(c,p,t,t2,t3), PathEdge_cs(c,p,t,t1,t2), PP(p,r).
PathEdge_cs(c,r,t,t1,t2) :- threadPM_cs(c,p,d), PathEdge_cs(c,p,t,t1,_), PP(p,r), threadAC(t2,d).
PathEdge_cs(d,h,x,y,z) :- threadPH_cs(c,p,d,h), PathEdge_cs(c,p,y,_,_), threadAC(x,d), z=y.
PathEdge_cs(d,h,x,y,z) :- threadPH_cs(c,p,d,h), PathEdge_cs(c,p,_,_,y), threadAC(x,d), z=y.
PathEdge_cs(e,h1,x,y,z) :- threadPM_cs(c,p,d), PathEdge_cs(c,p,_,_,x), threadACH(x,e,h1), threadAC(y,d), z=y.
mhp_cs(c,p,t1,t2) :- PathEdge_cs(c,p,t1,_,t2), t1!=0, t2!=0.

#Instrumented rules
simplePM_cs_XZ89_0_33(c,p,d,m,i) :- CICM(c,i,d,m), PI(p,i), !threadStartI(i).
simplePH_cs_XZ89_1_33(c,p,d,h,m) :- simplePM_cs(c,p,d,m), MPhead(m,h).
simplePT_cs_XZ89_2_33(c,p,d,t,m) :- simplePM_cs(c,p,d,m), MPtail(m,t).
threadPM_cs_XZ89_3_33(c,p,d,i,v_XZ89_0) :- threadCICM(c,i,d,v_XZ89_0), PI(p,i).
threadPH_cs_XZ89_4_33(c,p,d,h,i,m) :- threadCICM(c,i,d,m), PI(p,i), MPhead(m,h).
threadAC_XZ89_5_33(t,c,m) :- threadACM(t,c,m), m!=0.
threadACH_XZ89_6_33(t,c,h,m) :- threadACM(t,c,m), m!=0, MPhead(m,h).
PathEdge_cs_XZ89_8_33(c,q,t,t1,t2,p) :- PathEdge_cs(c,p,t,t1,t2), PP(p,q).
PathEdge_cs_XZ89_9_33(d,q,t,t1,t2,c,p,v_XZ89_0) :- simplePH_cs(c,p,d,q), PathEdge_cs(c,p,t,v_XZ89_0,t2), t1=t2.
SummEdge_cs_XZ89_10_33(c,p,t,t1,t2,d,q) :- simplePT_cs(c,p,d,q), PathEdge_cs(d,q,t,t1,t2).
PathEdge_cs_XZ89_11_33(c,r,t,t1,t3,p,t2) :- SummEdge_cs(c,p,t,t2,t3), PathEdge_cs(c,p,t,t1,t2), PP(p,r).
PathEdge_cs_XZ89_12_33(c,r,t,t1,t2,p,d,v_XZ89_0) :- threadPM_cs(c,p,d), PathEdge_cs(c,p,t,t1,v_XZ89_0), PP(p,r), threadAC(t2,d).
PathEdge_cs_XZ89_13_33(d,h,x,y,z,c,p,v_XZ89_0,v_XZ89_1) :- threadPH_cs(c,p,d,h), PathEdge_cs(c,p,y,v_XZ89_0,v_XZ89_1), threadAC(x,d), z=y.
PathEdge_cs_XZ89_14_33(d,h,x,y,z,c,p,v_XZ89_0,v_XZ89_1) :- threadPH_cs(c,p,d,h), PathEdge_cs(c,p,v_XZ89_0,v_XZ89_1,y), threadAC(x,d), z=y.
PathEdge_cs_XZ89_15_33(e,h1,x,y,z,c,p,d,v_XZ89_0,v_XZ89_1) :- threadPM_cs(c,p,d), PathEdge_cs(c,p,v_XZ89_0,v_XZ89_1,x), threadACH(x,e,h1), threadAC(y,d), z=y.
mhp_cs_XZ89_16_33(c,p,t1,t2,v_XZ89_0) :- PathEdge_cs(c,p,t1,v_XZ89_0,t2), t1!=0, t2!=0.
