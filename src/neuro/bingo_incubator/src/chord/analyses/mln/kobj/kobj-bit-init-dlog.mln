// domains
*dom_I(i_dom)
*dom_H(h_dom)
*dom_M(m_dom)
*dom_K(k_dom)
*dom_V(v_dom)
*dom_C(c_dom)
// input predicates
*truncCKC(c_dom, k_dom, c_dom)
*IM(i_dom, m_dom)
*MI(m_dom, i_dom)
*VH(v_dom, h_dom)
*statM(m_dom)
*MH(m_dom, h_dom)
*initCHC(c_dom, h_dom, c_dom)
*DenyO(h_dom, k_dom)
*CL(c_dom, k_dom)
*DenyH(h_dom, k_dom)
*initCOC(c_dom, h_dom, c_dom)
*roots(m_dom)
*thisMV(m_dom, v_dom)

// non-input predicates, which can appear on the lhs of each rule
COC_1(c_dom, h_dom, c_dom)
AllowH(h_dom, k_dom)
CM(c_dom, m_dom)
HM(h_dom, m_dom)
CHC(c_dom, h_dom, c_dom)
CHC_1(c_dom, h_dom, c_dom)
CHC_2(c_dom, h_dom, c_dom)
AllowO(h_dom, k_dom)
COC_2(c_dom, h_dom, c_dom)
COC(c_dom, h_dom, c_dom)

// rules converted from dlog, which are all hard
thisMV(m,v1), VH(v1,h) => HM(h,m).
roots(m) => CM(0,m).
COC(a,h,c), HM(h,m) => CM(c,m).
CM(c,m0), IM(i,m1), statM(m1), MI(m0,i) => CM(c,m1).
AllowH(a,0).
MH(m,h), CM(c1,m), initCHC(c1,h,c2) => CHC_1(c1,h,c2).
CHC_1(c1,h,c2), CL(c2,l), AllowH(h,l) => CHC(c1,h,c2).
CHC_1(c1,h,c2), CL(c2,l1), DenyH(h,l2), truncCKC(c2,l2,c3), l2 <= l1 => CHC_2(c1,h,c3).
CHC_2(c1,h,c2), CL(c2,l), AllowH(h,l) => CHC(c1,h,c2).
AllowO(a,0).
MH(m,h), CM(c1,m), initCOC(c1,h,c2) => COC_1(c1,h,c2).
COC_1(c1,h,c2), CL(c2,l), AllowO(h,l) => COC(c1,h,c2).
COC_1(c1,h,c2), CL(c2,l1), DenyO(h,l2), truncCKC(c2,l2,c3), l2 <= l1 => COC_2(c1,h,c3).
COC_2(c1,h,c2), CL(c2,l), AllowO(h,l) => COC(c1,h,c2).
