//Predicates
//k-obj-init
*initCOC(c,h,c)
*initCHC(c,h,c)
*truncCKC(c,k,c)
*HK(h,k)
*OK(h,k)
*roots(m)
*IM(i,m)
*VH(var,h)
*MI(m,i)
*MH(m,h)
*CL(c,k)
*IinvkArg0(i,var)
*statM(m)
*AllowH(h,k)
*DenyH(h,k)
*AllowO(h,k)
*DenyO(h,k)
*thisMV(m,var)

HM(h,m)
CHC_1(c,h,c)
CHC_2(c,h,c)
COC_1(c,h,c)
COC_2(c,h,c)
CM(c,m)
CHC(c,h,c)
COC(c,h,c)

//k-obj
*HT(h,t)
*cha(m,t,m)
*sub(t,t)
*statIM(i,m)
*specIM(i,m)
*virtIM(i,m)
*MobjValAsgnInst(m,var,h)
*MobjVarAsgnInst(m,var,var)
*MgetInstFldInst(m,var,var,f)
*MputInstFldInst(m,var,f,var)
*MgetStatFldInst(m,var,f)
*MputStatFldInst(m,f,var)
*clsForNameIT(i,t)
*objNewInstIH(i,h)
*objNewInstIM(i,m)
*conNewInstIH(i,h)
*conNewInstIM(i,m)
*aryNewInstIH(i,h)
*classT(t)
*staticTM(t,m)
*staticTF(t,f)
*clinitTM(t,m)
*MmethArg(m,z,var)
*MspcMethArg(m,var)
*IinvkArg(i,z,var)
*IinvkRet(i,z,var)
*argCopy(i,var,m,var)
*retCopy(i,var,m,var)
*VCfilter(var,c)
*CH(c,h)
*epsilonM(m)
*kobjSenM(m)
*ctxtCpyM(m)

RobjValAsgnInst(c,var,h)
RobjVarAsgnInst(c,var,var)
RgetInstFldInst(c,var,var,f)
RputInstFldInst(c,var,f,var)
RgetStatFldInst(c,var,f)
RputStatFldInst(c,f,var)
IHM(i,h,m)
reachableT(t)
DIC(c,i,c)
DIH(c,i,h)
DI(c,i)
DVDV(c,var,c,var)
ctxtInsIHM(i,h,m)
kobjSenIHM(i,h,m)
kobjSenICM(i,c,m)
ctxtInsSpecIM(i,m)
kobjSenSpecIM(i,m)
ctxtInsStatIM(i,m)
ctxtCpyStatIM(i,m)
reachableCI(c,i)
reachableCM(c,m)
rootCM(c,m)
CICM(c,i,c,m)
CMCM(c,m,c,m)
CVC(c,var,c)
FC(f,c)
CFC(c,f,c)
CCMatch(c,c)
CCM(c,c,m)
CFC_37_0(c,f,var,c)
CVC_33_0(c,var,f,c)

//polysite
*checkExcludedI(i)
virtI(i)
polySite(i)
insvIM(i,m)
allQueries(i)

//Rules
//k-obj-init
1  thisMV(m,v1), VH(v1,h) => HM(h,m)
1  roots(m) => CM(0,m)
1  COC(d,h,c), HM(h,m) => CM(c,m)
1  CM(c,m0), IM(i,m1), statM(m1), MI(m0,i) => CM(c,m1) 
1  MH(m,h), CM(c1,m),initCHC(c1,h,c2) => CHC_1(c1,h,c2)
1  CHC_1(c1,h,c2),CL(c2,l),AllowH(h,l) => CHC(c1,h,c2)
1  CHC_1(c1,h,c2), CL(c2,l1), DenyH(h,l2), truncCKC(c2,l2,c3), [l2 <= l1] => CHC_2(c1,h,c3) 
1  CHC_2(c1,h,c2), CL(c2,l), AllowH(h,l) => CHC(c1,h,c2)
1  MH(m,h), CM(c1,m),initCOC(c1,h,c2) => COC_1(c1,h,c2)
1  COC_1(c1,h,c2),CL(c2,l),AllowO(h,l) => COC(c1,h,c2)
1  COC_1(c1,h,c2), CL(c2,l1), DenyO(h,l2), truncCKC(c2,l2,c3), [l2 <= l1] => COC_2(c1,h,c3) 
1  COC_2(c1,h,c2), CL(c2,l), AllowO(h,l) => COC(c1,h,c2)


//k-obj
1  CHC(c1,h,c2), COC(c1,h,c3) => CCMatch(c2,c3)
1  virtIM(i,m1), HT(h,t), cha(m1,t,m2) => IHM(i,h,m2) 
1  IHM(i,h,m), epsilonM(m) => ctxtInsIHM(i,h,m)
1  IHM(i,h,m), kobjSenM(m) => kobjSenIHM(i,h,m) 
1  kobjSenIHM(i,h,m), CH(o,h) => kobjSenICM(i,o,m) 
1  specIM(i,m), epsilonM(m) => ctxtInsSpecIM(i,m)
1  specIM(i,m), kobjSenM(m) => kobjSenSpecIM(i,m) 
1  statIM(i,m), epsilonM(m) => ctxtInsStatIM(i,m) 
1  statIM(i,m), ctxtCpyM(m) => ctxtCpyStatIM(i,m) 
1  clinitTM(t,m), reachableT(t) => reachableCM(0,m) 
1  CICM(d,i,c,m) => reachableCM(c,m)
1  MI(m,i), reachableCM(c,m) => reachableCI(c,i) 
1  IinvkArg0(i,v1), CVC(c,v1,o) => DIC(c,i,o)
1  DIC(c,i,o), CH(o,h) => DIH(c,i,h)
1  DIH(c,i,h) => DI(c,i)
1  reachableCI(c,i), ctxtInsIHM(i,h,m), DIH(c,i,h) => CICM(c,i,0,m) 
1  reachableCI(c,i), kobjSenICM(i,o,m), DIC(c,i,o), CCMatch(o,n) => CICM(c,i,n,m) 
1  reachableCI(c,i), kobjSenICM(i,o,m), DIC(c,i,o), CCMatch(o,n) => CCM(o,n,m)
1  reachableCI(c,i), ctxtInsSpecIM(i,m), DI(c,i) => CICM(c,i,0,m)
1  reachableCI(c,i), kobjSenSpecIM(i,m), DIC(c,i,o), CCMatch(o,n) => CICM(c,i,n,m) 
1  reachableCI(c,i), kobjSenSpecIM(i,m), DIC(c,i,o), CCMatch(o,n) => CCM(o,n,m)
1  reachableCI(c,i), ctxtInsStatIM(i,m) => CICM(c,i,0,m)
1  reachableCI(c,i), ctxtCpyStatIM(i,m), d=c => CICM(c,i,d,m) 
1  CCM(o,d,m), MspcMethArg(m,v1), CH(d,h), CH(o,h) => CVC(d,v1,o) 
1  argCopy(i,u,m,v1), CICM(c,i,d,m) => DVDV(d,v1,c,u)
1  retCopy(i,u,m,v1), CICM(c,i,d,m) => DVDV(c,u,d,v1) 
1  DVDV(c,u,d,v1), CVC(d,v1,o), VCfilter(u,o) => CVC(c,u,o) 
1  reachableCM(c,m), MobjValAsgnInst(m,l,h) => RobjValAsgnInst(c,l,h) 
1  RobjValAsgnInst(c,l,h), CHC(c,h,o) => CVC(c,l,o)
1  reachableCM(c,m), MobjVarAsgnInst(m,l,r) => RobjVarAsgnInst(c,l,r) 
1  RobjVarAsgnInst(c,l,r), CVC(c,r,c1), VCfilter(l,c1) => CVC(c,l,c1) 
1  reachableCM(c,m), MgetInstFldInst(m,l,b,f) => RgetInstFldInst(c,l,b,f) 
//1  RgetInstFldInst(c,l,b,f), CVC(c,b,c1), CFC(c1,f,c2) => CVC(c,l,c2)
1  RgetInstFldInst(c,l,b,f), CVC(c,b,c1) => CVC_33_0(c,l,f,c1)
1  CVC_33_0(c,l,f,c1), CFC(c1,f,c2) => CVC(c,l,c2)
1  reachableCM(c,m), MgetStatFldInst(m,l,f) => RgetStatFldInst(c,l,f)
1  RgetStatFldInst(c,l,f), FC(f,o) => CVC(c,l,o)
1  reachableCM(c,m), MputInstFldInst(m,b,f,r) => RputInstFldInst(c,b,f,r) 
//1  RputInstFldInst(c,b,f,r), CVC(c,b,c1), CVC(c,r,c2) => CFC(c1,f,c2)
1  RputInstFldInst(c,b,f,r), CVC(c,b,c1) => CFC_37_0(c,f,r,c1)
1  CFC_37_0(c,f,r,c1), CVC(c,r,c2) => CFC(c1,f,c2)
1  reachableCM(c,m), MputStatFldInst(m,f,r) => RputStatFldInst(c,f,r)
1  RputStatFldInst(c,f,r), CVC(c,r,o) => FC(f,o)
1  reachableCI(c,i), objNewInstIM(i,m) => reachableCM(c,m) 
1  reachableCI(c,i), conNewInstIM(i,m) => reachableCM(c,m) 
1  reachableCI(c,i), objNewInstIM(i,m), MmethArg(m,0,v1), objNewInstIH(i,h), CHC(c,h,o) => CVC(c,v1,o)  
1  reachableCI(c,i), objNewInstIH(i,h), IinvkRet(i,0,v1), CHC(c,h,o) => CVC(c,v1,o)
1  reachableCI(c,i), conNewInstIM(i,m), IinvkArg(i,1,u), MmethArg(m,1,v1), CVC(c,u,o), CFC(o,0,o2) => CVC(c,v1,o2) 
1  reachableCI(c,i), conNewInstIM(i,m), MmethArg(m,0,v1), conNewInstIH(i,h), CHC(c,h,o) => CVC(c,v1,o)
1  reachableCI(c,i), conNewInstIH(i,h), IinvkRet(i,0,v1), CHC(c,h,o) => CVC(c,v1,o)
1  reachableCI(c,i), aryNewInstIH(i,h), IinvkRet(i,0,v1), CHC(c,h,o) => CVC(c,v1,o)  
1  reachableCI(c,i), conNewInstIH(i,h), HT(h,t) => reachableT(t)
1  reachableCI(c,i), objNewInstIH(i,h), HT(h,t) => reachableT(t) 
1  reachableCI(c,i), clsForNameIT(i,t) => reachableT(t)
1  reachableCM(c,m), MobjValAsgnInst(m,v1,h), HT(h,t) => reachableT(t) 
1  reachableCM(c,m), staticTM(t,m) => reachableT(t)
1  reachableCM(c,m), MputStatFldInst(m,f,v1), staticTF(t,f) => reachableT(t) 
1  reachableCM(c,m), MgetStatFldInst(m,v1,f), staticTF(t,f) => reachableT(t) 
1  classT(t), reachableT(s), sub(s,t) => reachableT(t)
1  reachableT(t), clinitTM(t,m) => rootCM(0,m)
1  CICM(c,i,d,n), MI(m,i) => CMCM(c,m,d,n)

//Polysite
1  CICM(c,i,d,m) => insvIM(i,m)
1  virtIM(i,m) => virtI(i)
1  virtI(i), insvIM(i,m1), insvIM(i,m2), !checkExcludedI(i), [m1 != m2] => polySite(i) 
