// domains
*dom_AS(as_dom)
*dom_E(e_dom)
*dom_M(m_dom)
*dom_K(k_dom)
*dom_C(c_dom)
*dom_F(f_dom)
// input predicates
*syncC(c_dom)
*writeE(e_dom)
*checkExcludedM(m_dom)
*excludeInitMethods(k_dom)
*initM(m_dom)
*excludeSameThread(k_dom)
*EF(e_dom, f_dom)
*mhe_cs(c_dom, e_dom, as_dom, as_dom)
*unlockedE_cs(as_dom, c_dom, e_dom, c_dom)
*reachableACM(as_dom, c_dom, m_dom)
*ME(m_dom, e_dom)
*statF(f_dom)
*CEC(c_dom, e_dom, c_dom)

// non-input predicates, which can appear on the lhs of each rule
escapingRaceHext(as_dom, c_dom, e_dom, as_dom, c_dom, e_dom)
guardedE(as_dom, c_dom, e_dom, c_dom)
racePairs_cs(e_dom, e_dom)
raceEEC(e_dom, e_dom, c_dom)
relevantTCE(as_dom, c_dom, e_dom)
unlikelyRaceHext(as_dom, c_dom, e_dom, as_dom, c_dom, e_dom)
parallelRaceHext(as_dom, c_dom, e_dom, as_dom, c_dom, e_dom)
statE(e_dom)
ctxtInsStartingRace(e_dom, e_dom)
excludeInitM(m_dom)
relevantTCM(as_dom, c_dom, m_dom)
startingRaceHext(as_dom, c_dom, e_dom, as_dom, c_dom, e_dom)
onlyWrTCEF(as_dom, c_dom, e_dom, f_dom)
rdOrWrTCEF(as_dom, c_dom, e_dom, f_dom)
datarace(as_dom, c_dom, e_dom, as_dom, c_dom, e_dom)

// hard rules converted from dlog into soft rules
1 excludeInitMethods(1), initM(m) => excludeInitM(m)
1 reachableACM(t,c,m), !checkExcludedM(m), !excludeInitM(m) => relevantTCM(t,c,m)
1 relevantTCM(t,c,m), ME(m,e) => relevantTCE(t,c,e)
1 relevantTCE(t,c,e), EF(e,f) => rdOrWrTCEF(t,c,e,f)
1 relevantTCE(t,c,e), EF(e,f), writeE(e) => onlyWrTCEF(t,c,e,f)
1 onlyWrTCEF(t1,c1,e1,f), rdOrWrTCEF(t2,c2,e2,f), e1<e2 => startingRaceHext(t1,c1,e1,t2,c2,e2)
1 rdOrWrTCEF(t1,c1,e1,f), onlyWrTCEF(t2,c2,e2,f), e1<e2 => startingRaceHext(t1,c1,e1,t2,c2,e2)
1 onlyWrTCEF(t1,c1,e1,f), onlyWrTCEF(t2,c2,e2,f), e1=e2, c1<c2 => startingRaceHext(t1,c1,e1,t2,c2,e2)
1 onlyWrTCEF(t1,c1,e1,f), onlyWrTCEF(t2,c2,e2,f), e1=e2, c1=c2, t1<=t2 => startingRaceHext(t1,c1,e1,t2,c2,e2)
1 startingRaceHext(t1,c1,e1,t2,c2,e2) => ctxtInsStartingRace(e1,e2)
1 EF(e,f), statF(f) => statE(e)
1 startingRaceHext(t1,c1,e1,t2,c2,e2), CEC(c1,e1,o), CEC(c2,e2,o) => escapingRaceHext(t1,c1,e1,t2,c2,e2)
1 startingRaceHext(t1,c1,e1,t2,c2,e2), statE(e1), statE(e2) => escapingRaceHext(t1,c1,e1,t2,c2,e2)
1 escapingRaceHext(t1,c1,e1,t2,c2,e2), mhe_cs(c1,e1,t1,t2), mhe_cs(c2,e2,t2,t1) => parallelRaceHext(t1,c1,e1,t2,c2,e2)
1 relevantTCE(t,c,e), syncC(o), !unlockedE_cs(t,c,e,o) => guardedE(t,c,e,o)
1 parallelRaceHext(t1,c1,e1,t2,c2,e2), guardedE(t1,c1,e1,o), guardedE(t2,c2,e2,o) => unlikelyRaceHext(t1,c1,e1,t2,c2,e2)
1 parallelRaceHext(t1,c1,e1,t2,c2,e2), excludeSameThread(1), t1=t2 => unlikelyRaceHext(t1,c1,e1,t2,c2,e2)
1 parallelRaceHext(t1,c1,e1,t2,c2,e2), !unlikelyRaceHext(t1,c1,e1,t2,c2,e2) => datarace(t1,c1,e1,t2,c2,e2)
1 datarace(t1,c1,e1,t2,c2,e2), CEC(c1,e1,c), CEC(c2,e2,c) => raceEEC(e1,e2,c)
1 datarace(t1,c1,e1,t2,c2,e2) => racePairs_cs(e1,e2)
